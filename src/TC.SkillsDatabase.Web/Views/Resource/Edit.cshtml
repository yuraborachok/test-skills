@model TC.SkillsDatabase.Web.ViewModels.ResourceViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Resource</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamId, "TeamId", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <select name="@Html.Name("TeamId")"
                        id="@Html.Id("TeamId")"
                        class="form-control"
                        data-val="true">
                    @foreach(var team in Model.Teams)
                    {
                        <option @(team.Id == Model.TeamId
                                      ? "selected = selected"
                                      : "") value="@team.Id">
                            @team.Name
                        </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "LocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="@Html.Name("LocationId")"
                        id="@Html.Id("LocationId")"
                        class="form-control"
                        data-val="true">
                    @foreach (var location in Model.Locations)
                    {
                        <option @(location.Id == Model.LocationId ? "selected = selected" : "") value="@location.Id">
                            @location.Name
                        </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResourceRoleId, "ResourceRoleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="@Html.Name("ResourceRoleId")"
                        id="@Html.Id("ResourceRoleId")"
                        class="form-control"
                        data-val="true">
                    @foreach (var resourceRole in Model.ResourceRoles)
                    {
                        <option @(resourceRole.Id == Model.ResourceRoleId ? "selected = selected" : "") value="@resourceRole.Id">
                            @resourceRole.Name
                        </option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
